
import React, { useState } from 'react';
import { useMarketingTool } from '@/contexts/MarketingToolContext';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { toast } from 'sonner';
import { X, Plus } from 'lucide-react';

/**
 * BusinessInfoStep Component
 * 
 * This component allows users to input and manage basic information about their business,
 * including name, industry, description, main problem solved, and products/services.
 */
const BusinessInfoStep: React.FC = () => {
  const { business, setBusinessInfo, setCurrentStep } = useMarketingTool();
  
  // Form state management
  const [formData, setFormData] = useState({
    name: business.name,
    industry: business.industry,
    description: business.description || '',
    mainProblem: business.mainProblem || '',
  });
  
  // Products state management - only manual entry now
  const [products, setProducts] = useState<string[]>(business.products || []);
  const [newProduct, setNewProduct] = useState('');

  /**
   * Handle input changes for form fields
   */
  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  /**
   * Add a new product to the products list
   */
  const addProduct = () => {
    if (!newProduct.trim()) {
      toast.error('Please enter a product name');
      return;
    }
    
    if (products.includes(newProduct.trim())) {
      toast.error('This product already exists');
      return;
    }
    
    setProducts([...products, newProduct.trim()]);
    setNewProduct('');
    toast.success('Product added successfully');
  };

  /**
   * Remove a product from the products list
   * @param index The index of the product to remove
   */
  const removeProduct = (index: number) => {
    const updatedProducts = [...products];
    updatedProducts.splice(index, 1);
    setProducts(updatedProducts);
    toast.success('Product removed');
  };

  /**
   * Handle form submission
   */
  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    // Basic validation
    if (!formData.name || !formData.industry || !formData.description) {
      toast.error('Please fill in all required fields');
      return;
    }

    if (products.length === 0) {
      toast.error('Please add at least one product');
      return;
    }

    // Pass the form data to setBusinessInfo
    setBusinessInfo({
      ...formData,
      products: products,
      // Provide empty strings for the required fields
      // They will be auto-generated by the context
      targetAudience: '',
      mainSolution: '',
      existingCustomers: '',
    });
    
    setCurrentStep(2);
    toast.success('Business information saved!');
  };

  return (
    <div className="container py-8 max-w-3xl animate-fade-in">
      <h1 className="text-3xl font-bold text-center mb-8">Tell us about your business</h1>
      <p className="text-center text-gray-600 mb-8">
        We'll use this information to generate targeted marketing research
      </p>
      
      <Card>
        <CardHeader>
          <CardTitle>Business Details</CardTitle>
          <CardDescription>
            Provide details about your business to help us understand your needs
          </CardDescription>
        </CardHeader>
        <form onSubmit={handleSubmit}>
          <CardContent className="space-y-4">
            {/* Business name and industry inputs */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="name">Business Name *</Label>
                <Input
                  id="name"
                  name="name"
                  value={formData.name}
                  onChange={handleInputChange}
                  placeholder="Acme Corp"
                  required
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="industry">Industry *</Label>
                <Input
                  id="industry"
                  name="industry"
                  value={formData.industry}
                  onChange={handleInputChange}
                  placeholder="Technology, Healthcare, etc."
                  required
                />
              </div>
            </div>

            {/* Business description textarea */}
            <div className="space-y-2">
              <Label htmlFor="description">Business Description *</Label>
              <Textarea
                id="description"
                name="description"
                value={formData.description}
                onChange={handleInputChange}
                placeholder="Describe what your business does..."
                rows={3}
                required
              />
            </div>

            {/* Main problem textarea */}
            <div className="space-y-2">
              <Label htmlFor="mainProblem">Main Problem You Solve</Label>
              <Textarea
                id="mainProblem"
                name="mainProblem"
                value={formData.mainProblem}
                onChange={handleInputChange}
                placeholder="What problem does your business solve?"
                rows={2}
              />
            </div>
            
            {/* Products/Services section */}
            <div className="space-y-4 pt-4 border-t">
              <div className="flex justify-between items-center">
                <Label htmlFor="products" className="text-lg font-medium">Products/Services *</Label>
              </div>
              
              {/* Add new product input */}
              <div className="flex gap-2">
                <Input
                  id="newProduct"
                  value={newProduct}
                  onChange={(e) => setNewProduct(e.target.value)}
                  placeholder="Add a product or service..."
                  className="flex-grow"
                />
                <Button 
                  type="button" 
                  onClick={addProduct}
                  size="icon"
                  className="shrink-0"
                >
                  <Plus className="h-4 w-4" />
                </Button>
              </div>
              
              {/* Product list */}
              {products.length > 0 && (
                <div className="flex flex-wrap gap-2 mt-2">
                  {products.map((product, index) => (
                    <div 
                      key={index} 
                      className="bg-secondary text-secondary-foreground px-3 py-1 rounded-full flex items-center gap-1"
                    >
                      <span>{product}</span>
                      <button 
                        type="button" 
                        onClick={() => removeProduct(index)}
                        className="text-secondary-foreground/70 hover:text-secondary-foreground focus:outline-none"
                      >
                        <X className="h-3 w-3" />
                      </button>
                    </div>
                  ))}
                </div>
              )}
              
              {/* Empty state for products */}
              {products.length === 0 && (
                <p className="text-sm text-muted-foreground">No products added yet. Add your products or services above.</p>
              )}
            </div>
          </CardContent>
          <CardFooter className="flex justify-end">
            <Button type="submit" className="bg-marketing-600 hover:bg-marketing-700">Continue</Button>
          </CardFooter>
        </form>
      </Card>
    </div>
  );
};

export default BusinessInfoStep;
