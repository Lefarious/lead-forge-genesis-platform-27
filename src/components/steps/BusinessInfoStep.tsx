
import React, { useState } from 'react';
import { useMarketingTool } from '@/contexts/MarketingToolContext';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { toast } from 'sonner';

/**
 * BusinessInfoStep Component
 * 
 * This component allows users to input and manage basic information about their business,
 * including name, industry, description, main problem solved, and origin country.
 */
const BusinessInfoStep: React.FC = () => {
  const { business, setBusinessInfo, setCurrentStep, resetDataForStep } = useMarketingTool();
  
  // Form state management
  const [formData, setFormData] = useState({
    name: business.name,
    industry: business.industry,
    description: business.description || '',
    mainProblem: business.mainProblem || '',
    country: business.country || '',
  });

  /**
   * Handle input changes for form fields
   */
  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  /**
   * Handle country selection change
   */
  const handleCountryChange = (value: string) => {
    setFormData(prev => ({ ...prev, country: value }));
  };

  /**
   * Handle form submission
   */
  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    // Basic validation
    if (!formData.name || !formData.industry || !formData.description || !formData.mainProblem || !formData.country) {
      toast.error('Please fill in all required fields');
      return;
    }

    // Reset any existing data first to ensure fresh generation in the next steps
    resetDataForStep(2);
    
    // Pass the form data to setBusinessInfo
    setBusinessInfo({
      ...formData,
      // Provide empty strings for the required fields
      // They will be auto-generated by the context
      targetAudience: '',
      mainSolution: '',
      existingCustomers: '',
      products: [] // Keep empty array for backward compatibility
    });
    
    setCurrentStep(2);
    toast.success('Business information saved!');
  };

  // List of countries for dropdown
  const countries = [
    "United States", "Canada", "United Kingdom", "Australia", "Germany",
    "France", "Japan", "China", "India", "Brazil", "Mexico", "Spain",
    "Italy", "South Korea", "Netherlands", "Singapore", "Sweden", "Switzerland",
    "Norway", "Denmark", "Finland", "Austria", "Belgium", "Ireland", "New Zealand",
    "South Africa", "United Arab Emirates", "Israel", "Russia", "Poland"
  ];

  return (
    <div className="container py-8 max-w-3xl animate-fade-in">
      <h1 className="text-3xl font-bold text-center mb-2">Tell us about your business</h1>
      <p className="text-center text-gray-600 mb-8">
        We'll use this <span className="font-medium">business</span> information to generate targeted marketing research
      </p>
      
      <Card>
        <CardHeader>
          <CardTitle>Business Details</CardTitle>
          <CardDescription>
            Provide details about your business to help us understand your needs
          </CardDescription>
        </CardHeader>
        <form onSubmit={handleSubmit}>
          <CardContent className="space-y-4">
            {/* Business name and industry inputs */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="name">Business Name *</Label>
                <Input
                  id="name"
                  name="name"
                  value={formData.name}
                  onChange={handleInputChange}
                  placeholder="Acme Corp"
                  required
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="industry">Industry *</Label>
                <Input
                  id="industry"
                  name="industry"
                  value={formData.industry}
                  onChange={handleInputChange}
                  placeholder="Technology, Healthcare, etc."
                  required
                />
              </div>
            </div>

            {/* Business description textarea */}
            <div className="space-y-2">
              <Label htmlFor="description">Business Description *</Label>
              <Textarea
                id="description"
                name="description"
                value={formData.description}
                onChange={handleInputChange}
                placeholder="Describe what your business does..."
                rows={3}
                required
              />
            </div>

            {/* Main problem textarea */}
            <div className="space-y-2">
              <Label htmlFor="mainProblem">Main Problem You Solve *</Label>
              <Textarea
                id="mainProblem"
                name="mainProblem"
                value={formData.mainProblem}
                onChange={handleInputChange}
                placeholder="What problem does your business solve?"
                rows={2}
                required
              />
            </div>

            {/* Origin country dropdown */}
            <div className="space-y-2">
              <Label htmlFor="country">Origin Country *</Label>
              <Select
                value={formData.country}
                onValueChange={handleCountryChange}
              >
                <SelectTrigger id="country">
                  <SelectValue placeholder="Select your business origin country" />
                </SelectTrigger>
                <SelectContent className="max-h-[300px]">
                  {countries.map((country) => (
                    <SelectItem key={country} value={country}>
                      {country}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>
          </CardContent>
          <CardFooter className="flex justify-end">
            <Button type="submit" className="bg-marketing-600 hover:bg-marketing-700">Continue</Button>
          </CardFooter>
        </form>
      </Card>
    </div>
  );
};

export default BusinessInfoStep;
